name: Java Maven CI for release actions

on:
  push:
    tags:
      - 'v*'

jobs:

  maven2-release:
    runs-on: ubuntu-latest
    env:
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      GPG_KEY_BASE64: ${{ secrets.GPG_KEY_BASE64 }}
      GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    steps:
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
          architecture: x64
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven2
      - name: Import GPG key
        run: echo "${GPG_KEY_BASE64}" | base64 --decode | gpg --no-tty --batch --import
      - name: Publish to public Maven2 repository
        run: |
          mvn --batch-mode deploy \
            --settings ./.github/workflows/settings.xml \
            -P resolving,signing,deploying \
            -DskipTests=true

  docker-release:
    runs-on: ubuntu-latest
    steps:
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
          architecture: x64
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven2
      - name: Build project and download Maven artifacts
        run: |
          mvn --batch-mode package \
            -DskipTests=true
      - name: Set image version
        run: ./.github/workflows/set-image-version.sh
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to GitHub container registry (base image Ubuntu)
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: |
            ghcr.io/${{ github.repository_owner }}/ldap-crowd-adapter:latest
            ghcr.io/${{ github.repository_owner }}/ldap-crowd-adapter:${{ env.IMAGE_VERSION }}
      - name: Publish to GitHub container registry (base image RHEL UBI)
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile-rhel
          tags: |
            ghcr.io/${{ github.repository_owner }}/ldap-crowd-adapter-rhel:latest
            ghcr.io/${{ github.repository_owner }}/ldap-crowd-adapter-rhel:${{ env.IMAGE_VERSION }}
